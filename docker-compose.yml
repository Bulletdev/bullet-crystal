services:
  app1:
    image: bullet-crystal:latest
    hostname: app1
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/rinha_payments
      REDIS_URL: redis://redis:6379
      PROCESSOR_URL: "http://payment-processor-default:8080"
      FALLBACK_URL: "http://payment-processor-fallback:8080"
      DISABLE_LOG: "true"
      PORT: "4444"
      TIMEOUT_DEFAULT: "180"
      TIMEOUT_FALLBACK: "95"
      RETRY_API_DEFAULT: "3"
      HTTP_CLIENT_WORKER: "10"
      MAX_POOL_SIZE: "20"
      CACHE_TTL: "2"
      BACK_END_URL: "http://app2:4444"
    networks:
      - backend
      - payment-processor
    expose:
      - "4444"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '60MB'

  app2:
    image: bullet-crystal:latest
    hostname: app2
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/rinha_payments
      REDIS_URL: redis://redis:6379
      PROCESSOR_URL: "http://payment-processor-default:8080"
      FALLBACK_URL: "http://payment-processor-fallback:8080"
      DISABLE_LOG: "true"
      PORT: "4444"
      TIMEOUT_DEFAULT: "180"
      TIMEOUT_FALLBACK: "95"
      RETRY_API_DEFAULT: "3"
      HTTP_CLIENT_WORKER: "10"
      MAX_POOL_SIZE: "20"
      CACHE_TTL: "2"
      BACK_END_URL: "http://app1:4444"
    networks:
      - backend
      - payment-processor
    expose:
      - "4444"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '60MB'

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    ports:
      - "9999:80"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20MB"

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: rinha_payments
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      postgres 
      -c max_connections=100
      -c shared_buffers=32MB
      -c effective_cache_size=80MB
      -c maintenance_work_mem=8MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=2MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 10
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '80MB'

  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 20mb --maxmemory-policy allkeys-lru --tcp-backlog 511
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 10
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '20MB'

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true